name: Build Docker Images

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      SCRIPT_ARGS:
        description: "Arguments to pass to build-images.sh"
        required: true
        default: "--build --ttl"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Bitwarden Secrets Manager GitHub Action
        uses: bitwarden/sm-action@92d1d6a4f26a89a8191c83ab531a53544578f182 #2.0.0
        with:
          access_token: ${{ secrets.BITWARDEN_ACCESS_TOKEN }}
          secrets: |
            ca87e057-8e91-4512-83c9-b232013c9dae > REGISTRY_PAT

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@26145a578dce008fee793528d031cd72c57d51af # v3.4.0
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
            default-load=true

      - name: Log in to Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: docker.io
          username: ${{ github.actor }}
          password: ${{ env.REGISTRY_PAT }}

      - name: Run build-images.sh
        run: ./build-images.sh ${{ inputs.SCRIPT_ARGS }}
        env:
          BUILD_PLATFORMS: linux/amd64,linux/arm64
          CURL_ARGS: '--header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
          CONTAINER_REGISTRY: docker.io
          CONTAINER_REPO: ${{ github.actor }}
          CONTAINER_ENGINE_SOCKET: /var/run/docker.sock # for DOINDOCKER
          DOINDOCKER: 0
          DOINDOCKER_BUILD_TOOLS: bash curl github-cli git jq ncurses # Docker image is Alpine-based
          ATTESTATION_ARGS: --attest type=sbom --attest type=provenance
          VERBOSE: 0
          NO_COLOR: 1
